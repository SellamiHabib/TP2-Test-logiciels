// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('Errors', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('Ex2 - empty field', async function() {
    await driver.get("http://localhost:63342/tp-test-logiciel/docs/assets/calc.html?_ijt=4c4gpjk4m9vnfihr3rl14vfhop&_ij_reload=RELOAD_ON_SAVE")
    await driver.manage().window().setRect(1546, 822)
    await driver.findElement(By.css("html")).click()
    await driver.findElement(By.id("num1")).click()
    await driver.findElement(By.id("operator")).click()
    {
      const dropdown = await driver.findElement(By.id("operator"))
      await dropdown.findElement(By.xpath("//option[. = '-']")).click()
    }
    await driver.findElement(By.css("body")).click()
    await driver.findElement(By.css("button")).click()
  })
  it('Ex2 - Divison par 0', async function() {
    await driver.get("http://localhost:63342/tp-test-logiciel/docs/assets/calc.html?_ijt=4c4gpjk4m9vnfihr3rl14vfhop&_ij_reload=RELOAD_ON_SAVE")
    await driver.manage().window().setRect(1546, 822)
    await driver.findElement(By.id("num1")).click()
    await driver.findElement(By.id("num1")).sendKeys("5")
    await driver.findElement(By.id("operator")).click()
    {
      const dropdown = await driver.findElement(By.id("operator"))
      await dropdown.findElement(By.xpath("//option[. = '/']")).click()
    }
    await driver.findElement(By.id("num2")).click()
    await driver.findElement(By.id("num2")).sendKeys("0")
    await driver.findElement(By.css("button")).click()
    assert(await driver.findElement(By.id("result")).getText() == "RÃ©sultat : Infinity")
    await driver.close()
  })
})
